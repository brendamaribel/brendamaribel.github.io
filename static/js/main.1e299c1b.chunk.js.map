{"version":3,"sources":["components/Landing.js","data/albums.js","components/Library.js","components/PlayerBar.js","components/Album.js","App.js","serviceWorker.js","index.js"],"names":["Landing","react_default","a","createElement","className","id","albums","title","artist","releaseInfo","albumCover","slug","songs","duration","audioSrc","Library","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","albumData","map","album","index","Link","to","concat","key","src","alt","length","Component","PlayerBar","onClick","handlePrevClick","handleSongClick","isPlaying","handleNextClick","formatTime","currentTime","type","value","max","min","step","onChange","handleTimeChange","volume","handleVolume","Album","find","match","params","currentSong","hover","audioElement","document","play","setState","pause","song","isSameSong","setSong","_this2","currentIndex","findIndex","newIndex","Math","newSong","_this3","currentLength","_this4","eventListeners","timeupdate","e","durationchange","addEventListener","removeEventListener","newTime","target","newVolume","timeSecs","minutes","floor","seconds","isNaN","_this5","classNam","onMouseEnter","hoverOn","onMouseLeave","hoverOff","handleHover","components_PlayerBar","App","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e299c1b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Landing = () => (\r\n\r\n<div className = \"landing-background\">\r\n\r\n  <section className = \"selling-points\">\r\n\r\n    <h1 id = \"app-name\">Harmonize</h1>\r\n\r\n     <div className = \"point1\">\r\n       <h2 className = \"point-title\">Choose your music</h2>\r\n       <p className = \"point-description\">Browse. Play. Harmonize.</p>\r\n     </div>\r\n\r\n     <div className = \"point2\">\r\n       <h2 className = \"point-title\">Unlimited, streaming, ad-free</h2>\r\n       <p className = \"point-description\">No arbitrary limits. No distractions.</p>\r\n     </div>\r\n\r\n     <div className = \"point3\">\r\n       <h2 className = \"point-title\">Mobile enabled</h2>\r\n       <p className = \"point-description\">Listen to your music on the go. This streaming service is available on all mobile platforms.</p>\r\n     </div>\r\n\r\n   </section>\r\n\r\n  </div>\r\n);\r\n\r\nexport default Landing;\r\n","export default [{\r\n  title: 'The Colors',\r\n  artist: 'Pablo Picasso',\r\n  releaseInfo: '1909 Spanish Records',\r\n  albumCover: '/assets/images/album_covers/01.jpg',\r\n  slug: 'the-colors',\r\n  songs: [\r\n      { title: 'Blue', duration: '161.71', audioSrc: '/assets/music/blue.mp3' },\r\n      { title: 'Green', duration: '103.96', audioSrc: '/assets/music/green.mp3' },\r\n      { title: 'Red', duration: '268.45', audioSrc: '/assets/music/red.mp3' },\r\n      { title: 'Pink', duration: '153.14', audioSrc: '/assets/music/pink.mp3' },\r\n      { title: 'Magenta', duration: '374.22', audioSrc: '/assets/music/magenta.mp3' }\r\n  ]\r\n}, {\r\n    title: 'The Telephone',\r\n    artist: 'Guglielmo Marconi',\r\n    releaseInfo: '1909 EM',\r\n    albumCover: '/assets/images/album_covers/02.jpg',\r\n    slug: 'the-telephone',\r\n    songs: [\r\n      { title: 'Blue', duration: '161.71', audioSrc: '/assets/music/blue.mp3' },\r\n      { title: 'Green', duration: '103.96', audioSrc: '/assets/music/green.mp3' },\r\n      { title: 'Red', duration: '268.45', audioSrc: '/assets/music/red.mp3' },\r\n      { title: 'Pink', duration: '153.14', audioSrc: '/assets/music/pink.mp3' },\r\n      { title: 'Magenta', duration: '374.22', audioSrc: '/assets/music/magenta.mp3' }\r\n    ]\r\n}];\r\n"," import React, { Component } from 'react';\r\n import { Link } from 'react-router-dom';\r\n import albumData from './../data/albums';\r\n\r\n class Library extends Component {\r\n   constructor(props) {\r\n    super(props);\r\n    this.state = { albums: albumData };\r\n  }\r\n\r\n    render() {\r\n\r\n     return (\r\n\r\n       <section className='library'>\r\n\r\n          {\r\n            this.state.albums.map( (album, index) =>\r\n              <Link className = \"remove-links\" to={`/album/${album.slug}`} key={index}>\r\n                <img src={album.albumCover} alt={album.title} />\r\n\r\n                <div>{album.title}</div>\r\n                <div>{album.artist}</div>\r\n                <div>{album.songs.length} songs</div>\r\n\r\n              </Link>\r\n            )\r\n      }\r\n\r\n       </section>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Library;\r\n","import React, { Component } from 'react';\r\n\r\n class PlayerBar extends Component {\r\n\r\n\r\n   render() {\r\n\r\n     return (\r\n\r\n     <section className = \"player-bar\">\r\n\r\n        <section id = \"buttons\">\r\n\r\n           <button id = \"previous\" onClick = {this.props.handlePrevClick}>\r\n              <span className = \"ion-skip-backward\"></span>\r\n           </button>\r\n\r\n           <button id = \"play-pause\" onClick = {this.props.handleSongClick}>\r\n              <span className = {this.props.isPlaying ? 'ion-pause' : 'ion-play'}></span>\r\n           </button>\r\n\r\n           <button id = \"next\" onClick = {this.props.handleNextClick}>\r\n              <span className = \"ion-skip-forward\"></span>\r\n           </button>\r\n\r\n        </section>\r\n\r\n\r\n       <section id = \"time-control\">\r\n\r\n          <div className = \"current-time\">{this.props.formatTime(this.props.currentTime)}</div>\r\n            <input\r\n              type = \"range\"\r\n              className = \"seek-bar\"\r\n              value = {(this.props.currentTime / this.props.duration) || 0}\r\n              max = \"1\"\r\n              min = \"0\"\r\n              step = \"0.01\"\r\n              onChange = {this.props.handleTimeChange}\r\n              />\r\n          <div className = \"total-time\">{this.props.formatTime(this.props.duration)}</div>\r\n\r\n       </section>\r\n\r\n\r\n       <section id = \"volume-control\">\r\n\r\n         <div className = \"icon ion-volume-low\"></div>\r\n            <input\r\n              type = \"range\"\r\n              className = \"seek-bar\"\r\n              min = \"0\"\r\n              max = \"1\"\r\n              step = \"0.01\"\r\n              value = {this.props.volume}\r\n              onChange = {this.props.handleVolume}/>\r\n         <div className = \"icon ion-volume-high\"></div>\r\n\r\n        </section>\r\n\r\n     </section>\r\n     );\r\n   }\r\n }\r\n\r\n export default PlayerBar;\r\n","import React, { Component } from 'react';\r\nimport albumData from './../data/albums';\r\nimport PlayerBar from './PlayerBar';\r\n\r\n\r\nclass Album extends Component {\r\n\r\n  constructor(props) {\r\n     super(props);\r\n\r\n     const album = albumData.find( album => {\r\n     return album.slug === this.props.match.params.slug\r\n   });\r\n\r\n   this.state = {\r\n     album: album,\r\n     currentSong: album.songs[-1],\r\n     currentTime: 0,\r\n     duration: album.songs[0].duration,\r\n     isPlaying: false,\r\n     hover : false\r\n   };\r\n\r\n   this.audioElement = document.createElement('audio');\r\n   this.audioElement.src = album.songs[0].audioSrc;\r\n\r\n   }\r\n\r\n   play() {\r\n        this.audioElement.play();\r\n        this.setState({ isPlaying: true });\r\n      }\r\n\r\n    pause() {\r\n       this.audioElement.pause();\r\n       this.setState({ isPlaying: false });\r\n     }\r\n\r\n    setSong(song) {\r\n        this.audioElement.src = song.audioSrc;\r\n        this.setState({ currentSong: song });\r\n      }\r\n\r\n    handleSongClick(song) {\r\n      const isSameSong = this.state.currentSong === song;\r\n\r\n      if (this.state.isPlaying && isSameSong) {\r\n            this.pause();\r\n        } else {\r\n          if (!isSameSong) { this.setSong(song); }\r\n            this.play();\r\n        }\r\n     }\r\n\r\n     hoverOn(index) {\r\n      this.setState({ hover: index })\r\n    }\r\n\r\n     hoverOff() {\r\n      this.setState({ hover: false })\r\n    }\r\n\r\n   handleHover(song, index) {\r\n\r\n    var isSameSong = this.state.currentSong === song\r\n\r\n    if (this.state.isPlaying && isSameSong) {\r\n        return <button><span className = \"ion-pause\"></span></button>\r\n      }\r\n      else if (!this.state.isPlaying && isSameSong) {\r\n        return <button><span className = \"ion-play\"></span></button>\r\n      }\r\n      else if (this.state.hover === index) {\r\n        return <button><span className = \"ion-play\"></span></button>\r\n      }\r\n      else {\r\n        return <span>{index + 1}</span>\r\n      }\r\n    }\r\n\r\n    handlePrevClick() {\r\n\r\n      const currentIndex = this.state.album.songs.findIndex(song => this.state.currentSong === song);\r\n      const newIndex = Math.max(0, currentIndex - 1);\r\n      const newSong = this.state.album.songs[newIndex];\r\n      this.setSong(newSong);\r\n      this.play();\r\n\r\n      }\r\n\r\n     handleNextClick() {\r\n\r\n      const currentIndex = this.state.album.songs.findIndex(song => this.state.currentSong === song);\r\n      const currentLength = this.state.album.songs.length;\r\n      const newIndex = Math.min(currentIndex + 1, currentLength - 1);\r\n      const newSong = this.state.album.songs[newIndex];\r\n      this.setSong(newSong);\r\n      this.play();\r\n\r\n      }\r\n\r\n      componentDidMount() {\r\n\r\n        this.eventListeners = {\r\n\r\n          timeupdate: e => {\r\n           this.setState({ currentTime: this.audioElement.currentTime });\r\n         },\r\n\r\n          durationchange: e => {\r\n           this.setState({ duration: this.audioElement.duration });\r\n         }\r\n\r\n       };\r\n\r\n       this.audioElement.addEventListener('timeupdate', this.eventListeners.timeupdate);\r\n       this.audioElement.addEventListener('durationchange', this.eventListeners.durationchange);\r\n\r\n     }\r\n\r\n\r\n     componentWillUnmount() {\r\n\r\n      this.audioElement.src = null;\r\n      this.audioElement.removeEventListener('timeupdate', this.eventListeners.timeupdate);\r\n      this.audioElement.removeEventListener('durationchange', this.eventListeners.durationchange);\r\n\r\n    }\r\n\r\n    handleTimeChange(e) {\r\n\r\n     const newTime = this.audioElement.duration * e.target.value;\r\n     this.audioElement.currentTime = newTime;\r\n     this.setState({ currentTime: newTime });\r\n\r\n   }\r\n\r\n   handleVolume(e) {\r\n\r\n    const newVolume = e.target.value;\r\n    this.audioElement.volume = newVolume;\r\n    this.setState({ volume: newVolume});\r\n  }\r\n\r\n\r\n   formatTime(timeSecs) {\r\n\r\n    let minutes = Math.floor(timeSecs/60)\r\n    let seconds = Math.floor(timeSecs%60)\r\n\r\n    if (isNaN(seconds) === true) {\r\n      return \"-:--\"\r\n  } else if (seconds <10) {\r\n      return `${minutes}:0${seconds}`\r\n  } else {\r\n      return `${minutes}:${seconds}`\r\n  }\r\n\r\n}\r\n\r\n\r\n   render() {\r\n\r\n     return (\r\n\r\n       <section className=\"album\">\r\n\r\n          <section id=\"album-info\">\r\n\r\n            <img id=\"album-cover-art\" src={this.state.album.albumCover} alt={this.state.album.title}/>\r\n\r\n            <div className=\"album-details\">\r\n              <h1 id = \"album-title\"> Album: {this.state.album.title}</h1>\r\n              <h2 classNam = \"artist\"> Artist: {this.state.album.artist}</h2>\r\n              <div id = \"release-info\"> Released: {this.state.album.releaseInfo}</div>\r\n            </div>\r\n\r\n          </section>\r\n\r\n        <table className = \"music-table\">\r\n          <th id = \"music-table-header\">Track List</th>\r\n          <tbody id = \"song-info\">\r\n\r\n            {\r\n              this.state.album.songs.map((song, index) =>\r\n                <tr onMouseEnter = {() => this.hoverOn(index)}\r\n                  onMouseLeave = {() => this.hoverOff()}\r\n                  className = \"song\" key={index} onClick = {() => this.handleSongClick(song)}\r\n                >\r\n\r\n                  <td className = \"music-table-first-colum\">{this.handleHover(song,index)}</td>\r\n                  <td className = \"music-table-second-colum\">{ song.title }:{\" \"}</td>\r\n                  <td className = \"music-table-third-colum\">{ this.formatTime(song.duration) }</td>\r\n\r\n              </tr>\r\n              )\r\n            }\r\n\r\n          </tbody>\r\n        </table>\r\n\r\n\r\n        <PlayerBar\r\n             isPlaying = {this.state.isPlaying}\r\n             currentSong = {this.state.currentSong}\r\n             handleSongClick = {() => this.handleSongClick(this.state.currentSong)}\r\n             handlePrevClick = {() => this.handlePrevClick()}\r\n             handleNextClick = {() => this.handleNextClick()}\r\n             currentTime = {this.audioElement.currentTime}\r\n             duration = {this.audioElement.duration}\r\n             handleTimeChange = {(e) => this.handleTimeChange(e)}\r\n             handleVolume = {(e) => this.handleVolume(e)}\r\n             formatTime = {(timeSecs) => this.formatTime(timeSecs)}\r\n           />\r\n\r\n       </section>\r\n     );\r\n   }\r\n }\r\n\r\nexport default Album;\r\n","import React, { Component } from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport './App.css';\r\nimport Landing from './components/Landing';\r\nimport Library from './components/Library';\r\nimport Album from './components/Album';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div className = \"App\">\r\n\r\n        <header>\r\n          <nav>\r\n\r\n            <div className = \"home\">\r\n             <Link className = \"home-link\" to ='/'>Home</Link>\r\n            </div>\r\n\r\n            <div className = \"library\">\r\n             <Link className = \"library-link\" to = '/library'>Library</Link>\r\n            </div>\r\n\r\n          </nav>\r\n        </header>\r\n\r\n\r\n        <main className = \"background\">\r\n           <Route exact path =\"/\" component = {Landing} />\r\n           <Route path = \"/library\" component = {Library} />\r\n           <Route path = \"/album/:slug\" component = {Album} />\r\n        </main>\r\n\r\n        <footer>\r\n          <p id = \"footer-text\">2019 Harmonize</p>\r\n        </footer>\r\n\r\n     </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n  , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}